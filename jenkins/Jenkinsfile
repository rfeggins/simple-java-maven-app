@Library('pipeline-library-demo')_

pipeline {
    agent any

    environment {
      Integer deployed_to_qa = 91
      Integer ready_for_po = 6
      jiraSite = "Hertz-Jira"  // Hertz site
      ddtl_ID =  "Ddtl-5309fsf"
      jiraComment = "No Comment"
      gitCommitMsg = ""
      current_state = ""

      //initializing a local variable
      in_progress = "https://hertzdigital.atlassian.net/rest/api/2/status/11408"
      dev_complete = "https://hertzdigital.atlassian.net/rest/api/2/status/11419"
      ready_to_deploy = "https://hertzdigital.atlassian.net/rest/api/2/status/6"
      to_do = "https://hertzdigital.atlassian.net/rest/api/2/status/11300"

    }  // End of Environment block

    stages {
      stage('Check Jira') {
        steps {
          script {
            try {
              def issue = jiraGetIssue idOrKey: ddtl_ID, site: jiraSite

            } catch (Exception ex) {

              if ( issue.successful.toString() ) {  //true
                echo "Issue ${ddtl_ID} Exists"
              } else {
                echo "Issue ${ddtl_ID} DOESNT EXIST"
              }

              println( ex.getMessage() )
              error "Script Error trying to get Comments"
              println("Catching the exception")
            } // END TRY BLOCK
          } // END SCRIPT
        } //END STEPS
      } // END Stage

      stage('Build') {
          steps {
              echo "Build Stage - package result"
              // if Build success then
          } // End Steps
      } //End of Build Stage
      stage('Test') {
          steps {
              echo "Test Stage"
          }
      } // End of Test Stage

      stage('Deploy to Dev') {
          steps {
            script {

              Integer pull_request_merged = 101
              def transitionInput = [ transition: [ id: pull_request_merged ] ]
              def trans_issue

              echo "##############################################################################"
              echo "executing shared lib call to transFrom DevComplete to ReadyForQA"
              echo "##############################################################################"

              try {
                    trans_issue = jiraTransitionIssue idOrKey: ddtl_ID , input: transitionInput, site: jiraSite
                    echo "transiton response" + trans_issue.data.toString()

              } catch (err) {
                    error "Script Error transitioning to ReadyToDeploy"

              } // END Catch
            } // END Script Section
         } // END Step
      } // End of Stage


    } // STAGES
    post { 
            failure {
                echo 'I will always say Hello again!'
            }
        }


} // PIPELINE END
