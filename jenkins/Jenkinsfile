pipeline {
    agent any

    environment {
      Integer buildSuccessTransition = 5
      Integer buildFailTransition = 1
      jiraSite = "Hertz-Jira"
      ddtl_ID =  "ddtl-5304"
      jiraComment = "No Comment"
      gitCommitMsg = "No Message"
    }  // End of Environment block

    stages {
        stage ('Validate Jira') {
          step {
            echo ddtl_ID
            echo $ddtl_ID
            script {
               echo "DDTL IDs is"
               echo ddtl_ID

            }
        }} // End of Validate Jira stage and Step



        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
        }} //End of Build Stage

        stage('Test') {
            steps {
                sh 'mvn test'
        }} // End of Test Stage
        stage('Deploy to Dev') {
            steps {
                echo "Deploy to Dev"
                sh 'ls -l'
        }}
}} //End Pipeline and Stages
/*
        stage('Update Jira Stage'){
           steps {
             script {

             } // End script
           } // End Steps
         } // End Update Jira Stage
             echo "Update Jira "

            script {

              def issue = jiraGetIssue idOrKey: 'env.ddtlID'
              echo issue.data.toString()

              try {
                  def comment = "${BUILD_URL} FAILED - ${ERROR}"
                  jiraAddComment idOrKey: $ddtlIDs, comment: comment, site: $jiraSite
                  currentBuild.result = 'FAILURE'

                  def transitionInput = [ transition: [ name: $buildSuccessTransition ] ]
                  jiraTransitionIssue idOrKey: $ddtlIDs, input: transitionInput, site: $jiraSite

             } catch (error) {
                  def comment = "${BUILD_URL} FAILED - ${ERROR}"
                  jiraAddComment idOrKey: $ddtlIDs, comment: comment, site: $jiraSite
                  currentBuild.result = 'FAILURE'
            }
        }
    } // End Stages
} // End Pipeline
*/
